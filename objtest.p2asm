con
	_clkfreq = 20000000
	_clkmode = 16779595
dat
	nop
	cogid	pa
	coginit	pa,##$404
	orgh	$10
	long	0	'reserved
	long	0 ' clock frequency: will default to 20000000
	long	0 ' clock mode: will default to $100094b
	orgh	$400
 _ret_	mov	result1, #0
	org	0
entry
	cmp	ptra, #0 wz
 if_ne	jmp	#spininit
	mov	ptra, ptr_stackspace_
	rdlong	pa, #20 wz
 if_ne	jmp	#skip_clock_set_
	hubset	#0
	hubset	##16779592
	waitx	##200000
	mov	pa, ##16779595
	hubset	pa
	wrlong	pa, #24
	wrlong	##20000000, #20
	jmp	#skip_clock_set_
	orgf	128
skip_clock_set_
	call	#_start
cogexit
	waitx	##160000
	cogid	arg01
	cogstop	arg01
spininit
	rdlong	objptr, ptra++
	rdlong	result1, ptra++
	setq	#3
	rdlong	arg01, ptra
	sub	ptra, #4
	call	result1
	jmp	#cogexit
FCACHE_LOAD_
    mov	fcache_tmpb_,ptrb
    pop	ptrb
    altd	pa,ret_instr_
    mov	 0-0, ret_instr_
    setq	pa
    rdlong	$0, ptrb++
    push	ptrb
    mov ptrb,fcache_tmpb_
    jmp	#\$0 ' jmp to cache
ret_instr_
    _ret_ cmp inb,#0
fcache_tmpb_
    long 0
fcache_load_ptr_
    long FCACHE_LOAD_
builtin_bytefill_
        shr	arg03, #1 wc
 if_c   wrbyte	arg02, arg01
 if_c   add	arg01, #1
        movbyts	arg02, #0
builtin_wordfill_
        shr	arg03, #1 wc
 if_c   wrword	arg02, arg01
 if_c   add	arg01, #2
        setword	arg02, arg02, #1
builtin_longfill_
        wrfast	#0,arg01
        cmp	arg03, #0 wz
 if_nz  rep	#1, arg03
 if_nz  wflong	arg02
        ret

objptr
	long	@objmem
ptr_stackspace_
	long	@stackspace
result1
	long	0
COG_BSS_START
	fit	480
	orgh
hubentry

' 
' pub start
_start
' 
' var1:=@var2
	mov	_var01, objptr
	add	_var01, #4
	wrlong	_var01, objptr
' word[var2+17*12+4]:=8			 
	add	objptr, #4
	rdlong	_var01, objptr
	add	_var01, #208
	wrword	#8, _var01
' word[var2+17*12+6]:=16
	rdlong	_var01, objptr
	sub	objptr, #4
	add	_var01, #210
	wrword	#16, _var01
_start_ret
	ret
hubexit
	jmp	#cogexit
objmem
	long	0[65]
stackspace
	long	0[1]
	org	COG_BSS_START
_var01
	res	1
arg01
	res	1
arg02
	res	1
arg03
	res	1
arg04
	res	1
	fit	480
